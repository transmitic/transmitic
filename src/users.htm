<html>

<head>
    <title>Users</title>
    <style>
        @import url(style.css);
    </style>
    <script src="global_transmitic.js"></script>
    <script>
        const DEFAULT_PORT = "45454";

        function loadCurrentUsers() {
            document.$("div#current-users").content(<CurrentUsers />);
        }

        function resetNewuserInputs() {
            document.$("input#new-user-nickname").value = "";
            document.$("input#new-user-public-id").value = "";
            document.$("input#new-user-ip").value = "";
            document.$("input#new-user-port").value = DEFAULT_PORT;
        }

        document.$("button#add-user").onclick = function () {
            let new_nickname = document.$("input#new-user-nickname").value;
            let new_public_id = document.$("input#new-user-public-id").value;
            let new_ip = document.$("input#new-user-ip").value;
            let new_port = document.$("input#new-user-port").value;
            let response = Window.this.xcall('add_new_user', new_nickname, new_public_id, new_ip, new_port);
            if (response[0] == 0) {
                setMsgBoxSuccess("User <strong>" + new_nickname + "</strong> added. You can now share with them.");
                resetNewuserInputs();
                loadCurrentUsers();
            }
            else {
                setMsgBoxError("Failed to add new user. " + response[1]);
            }
        }

        class SingleUser extends Element {

            props;

            isAllowed;
            isEditing;

            elementNickname;
            elementPublicID;
            elementIP;
            elementPort;

            actionButton;
            editButton;

            this(props) {
                this.isAllowed = props.status == "Allowed";
                this.isEditing = false;
                this.props = props;

            }

            render(props) {
                if (this.isAllowed) {
                    this.actionButton = <button class="user-action">Block</button>;
                }
                else {
                    this.actionButton = <button class="user-action warning-button">Allow</button>;
                }

                if (this.isEditing) {
                    this.editButton = <button class="save-user active-button">Save</button>

                    // TODO Add a copy button to click for each field

                    // Right now changing a nickname is not supported
                    //this.elementNickname = <input class="edit-user-nickname" data-nickname={this.props.nickname} type="text">{this.props.nickname}</input>
                    this.elementNickname = <span>{this.props.nickname}</span>
                    this.elementPublicID = <input class="edit-user-public-id" data-nickname={this.props.nickname} type="text" size="50">{this.props.public_id}</input>
                    this.elementIP = <input class="edit-user-ip" data-nickname={this.props.nickname} type="text" size="50">{this.props.ip}</input>
                    this.elementPort = <input class="edit-user-port" data-nickname={this.props.nickname} type="text" size="50">{this.props.port}</input>
                }
                else {
                    this.editButton = <button class="edit-user">Edit</button>

                    this.elementNickname = <span>{this.props.nickname}</span>
                    this.elementPublicID = <span>{this.props.public_id}</span>
                    this.elementIP = <span>{this.props.ip}</span>
                    this.elementPort = <span>{this.props.port}</span>
                }

                return <div>
                    <span selectable><h3>{this.props.nickname}</h3></span>
                    <table selectable>
                        <tbody>
                            <tr>
                                <td>Nickname:</td>
                                <td>{this.elementNickname}</td>
                            </tr>
                            <tr>
                                <td>Public ID:</td>
                                <td class="code-font">{this.elementPublicID}</td>
                            </tr>
                            <tr>
                                <td style="padding-right: 1em;">IP Address:</td>
                                <td>{this.elementIP}</td>
                            </tr>
                            <tr>
                                <td>Port:</td>
                                <td>{this.elementPort}</td>
                            </tr>
                            <tr>
                                <td>Sharing:</td>
                                <td>{this.props.status}</td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="users-bar">
                        <button class="remove-user danger-button">Remove</button> {this.editButton} {this.actionButton}
                    </div>

                    <hr />
                </div>
            }

            ["on click at button.remove-user"]() {
                let response = Window.this.xcall('remove_user', this.props.nickname);
                if (response[0] == 0) {
                    setMsgBoxSuccess("User removed. You will no longer share with each other.");
                    this.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to remove user. " + response[1]);
                }
            }

            ["on click at button.user-action"]() {
                let response = Window.this.xcall('set_user_is_allowed_state', this.props.nickname, !this.isAllowed);
                if (response[0] == 0) {
                    this.parentElement.componentUpdate();
                }
                else {

                }
            }

            ["on click at button.edit-user"]() {
                // TODO text doesn't unload unless remove focus
                this.componentUpdate({ isEditing: !this.isEditing });
            }

            ["on click at button.save-user"]() {
                // Right now changing the nickname is not supported
                //let new_nickname = document.$("input.edit-user-nickname[data-nickname='" + this.props.nickname + "']").value;
                let nickname = this.props.nickname;
                let new_public_id = document.$("input.edit-user-public-id[data-nickname='" + this.props.nickname + "']").value;
                let new_ip = document.$("input.edit-user-ip[data-nickname='" + this.props.nickname + "']").value;
                let new_port = document.$("input.edit-user-port[data-nickname='" + this.props.nickname + "']").value;

                let response = Window.this.xcall('update_user', nickname, new_public_id, new_ip, new_port);
                if (response[0] == 0) {
                    setMsgBoxSuccess("<strong>" + nickname + "</strong> has been updated.");
                    this.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to update user. " + response[1]);
                }
            }

        }

        class CurrentUsers extends Element {
            this(props) {

            }

            render(props) {
                let users = Window.this.xcall('get_shared_users');
                if (!users) { // No users
                    return <div></div>;
                }

                return <div>
                    <h2>Current Users</h2>

                    {users.map((d) => <SingleUser nickname={d.nickname} public_id={d.public_id} ip={d.ip} port={d.port} status={d.status} />)}
                </div>;
            }
        }

        document.ready = function () {
            eachPageReady();

            resetNewuserInputs();
            loadCurrentUsers();
        }


    </script>
</head>

<body>
    <div class="main-body">
        <div id="msg-box"></div>

        <h1>Users</h1>
        <div>
            <h2>Add New User</h2>
            <table>
                <tbody>
                    <tr class="add-row">
                        <td>Nickname: </td>
                        <td><input id="new-user-nickname" type="text" size="50"></td>
                    </tr>
                    <tr class="add-row">
                        <td>Public ID:</td>
                        <td class="code-font"><input id="new-user-public-id" type="text" size="50"></td>
                    </tr>
                    <tr class="add-row">
                        <td>IP Address: &nbsp;</td>
                        <td><input id="new-user-ip" type="text" size="50"></td>
                    </tr>
                    <tr class="add-row">
                        <td>Port:</td>
                        <td><input id="new-user-port" type="text" size="50"></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td style="text-align:right;"><button id="add-user" class="active-button"
                                style="margin-top: 10dip;">Add New
                                User</button>
                        </td>
                    </tr>
                </tbody>
            </table>
            <br>

        </div>

        <div>
            <div id="current-users">
            </div>
        </div>



    </div>
</body>

</html>